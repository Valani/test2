{% if isPopup is defined and isPopup %}
<div class="modal fade" id="cartModal" tabindex="-1" role="dialog" aria-labelledby="cartModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
	    <div class="modal-content">
	        <div class="modal-header p-4">
	            <h5 class="modal-title fsz-20 d-flex align-items-center justify-content-between" id="cartModalLabel">{{ heading_title }}</h5>
	            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
	        </div>
	        <div class="modal-body position-relative p-0">
				<div class="p-4 pt-3">
					{% if products or vouchers %}
						<div id="modalCartBody">
							<div class="pb-3 fsz-14 fw-500 dark-text text-center">
								<div>{{ text_cart_items }}</div>
								<a href="{{ cart_link }}" class="blue-link d-block text-center fsz-14 fw-500">{{ button_cart }}</a>
							</div>
							<div class="modal-body-cart-items mb-3">
								{% for product in products %}
								<div class="content-block p-3">
									<div class="d-flex">
										<div class="sidebar-cart-item-left d-flex flex-column justify-content-between align-items-center fsz-14">
											{% if product.thumb %}
												<img src="{{ product.thumb }}" alt="{{ product.name }}" width="60" height="60" />
											{% endif %}
											<div class="sidebar-cart-item-price">
												<div class="dark-text fw-800">{{ product.total }}</div>
											</div>
										</div>
										<div class="sidebar-cart-item-right fsz-12 ps-3 flex-grow-1">
											<div class="sidebar-cart-info">
												<div class="sidebar-cart-item-title fw-700 dark-text mb-2">
													<a href="{{ product.href }}">{{ product.name }}</a>
													{% if not product.stock %}
													<span class="required">***</span>
													{% endif %}
												</div>
												{% if product.option %}
													{% for option in product.option %}
														<div class="sidebar-cart-item-option"><span class="dark-text">{{ option.name }}:</span> {{ option.value }}</div>
													{% endfor %}
												{% endif %}
											</div>
											<div class="sidebar-cart-item-buttons d-flex align-items-center justify-content-between flex-grow-1 pt-3 mt-auto">
												<div class="sc-module-quantity d-flex align-items-center justify-content-center py-1 br-12">
													<input name="product_id_q" value="{{ product.product_id }}" type="hidden" />
													<input name="product_id" value="{{ product.key }}" type="hidden" />
													<input name="product_stock_{{ product.key }}" id="product_stock_{{ product.key }}" value="{{ product.quantity_product }}" type="hidden" />
													<button type="button" class="sc-module-quantity-btn d-flex align-items-center justify-content-center" onclick="update_manual('#main-quantity-val-{{ product.key }}', 'minus', '{{ product.key }}'); return validate('#main-quantity-val-{{ product.key }}');">
														<span class="minus"></span>
													</button>
													<input type="text" name="quantity" class="form-control" id="main-quantity-val-{{ product.key }}" value="{{ product.quantity }}" onchange="update_manual('#main-quantity-val-{{ product.key }}', 'manual', '{{ product.key }}'); return validate('#main-quantity-val-{{ product.key }}');" keypress="update_manual('#main-quantity-val-{{ product.key }}', '', '{{ product.key }}'); return validate('#main-quantity-val-{{ product.key }}');" inputmode="numeric">
													<button type="button" class="sc-module-quantity-btn d-flex align-items-center justify-content-center" onclick="update_manual('#main-quantity-val-{{ product.key }}', 'plus', '{{ product.key }}'); return validate('#main-quantity-val-{{ product.key }}');">
														<span class="plus"></span>
													</button>
												</div>
												<input name="product_key" value="{{ product.key }}" style="display: none;" hidden />
												<input name="product_id_q" value="{{ product.product_id }}" style="display: none;" hidden />
												<button type="button" class="sc-btn sc-btn-danger sc-btn-with-icon br-4 ms-auto" onclick="remove(this, 'remove'); return false;">
													<span class="sc-btn-icon sc-btn-icon-del"></span>
												</button>
											</div>
										</div>
									</div>
								</div>
								{% endfor %}
								{% for voucher in vouchers %}
								<div class="d-flex align-items-center">
									<div class="rm-cart-text">{{ voucher.description }}</div>
									<button type="button" class="sc-btn sc-btn-danger sc-btn-with-icon br-4" onclick="voucher.remove('{{ voucher.key }}');">
										<span class="rm-btn-icon"></span>
									</button>
								</div>
								{% endfor %}
								{% if error_warning %}
								<div class="required mt-3">*** {{ error_warning }}</div>
								{% endif %}
							</div>
						</div>
						<div class="modal-cart-bottom">
							{% if oct_byoneclick is defined and oct_byoneclick %}
								{{ oct_byoneclick }}
							{% endif %}
							<a href="{{ checkout_link }}" class="sc-btn sc-btn-primary br-4 w-100 mt-3 text-decoration-none">{{ button_checkout }}</a>
							<button type="button" class="sc-btn sc-btn-secondary br-4 w-100 mt-3" data-bs-dismiss="modal">{{ button_shopping }}</button>
						</div>
					{% else %}
						<div class="empty-popup-cart text-center" id="modalCartBody">
							<img src="catalog/view/theme/oct_showcase/img/empty-cart.svg">
							<div class="empty-popup-cart-text">{{ text_empty }}</div>
						</div>
					{% endif %}
				</div>
			</div>
	    </div>
	</div>
<script>
//popup_cart_one_click
function showInput() {
	$('#popup_cart_one_click').fadeOut(1);
	$('.hidden-input-group').fadeIn(300).css('height', '44px');
}

// validate input value
function validate(input) {
	$(input).val($(input).val().replace(/[^\d,]/g, ''));
}

// remove product from cart
function remove(target, status) {
	product_key  = $(target).parent().find('input[name="product_key"]').val(),
	url = null;
	if (status == 'remove') {
		url = 'index.php?route=octemplates/module/oct_popup_cart&isPopup=1&remove=' + product_key;
	}
	masked('body', true);
	$.ajax({
		url: url,
		type: 'get',
		dataType: 'html',
		cache: false,
		success: function(data) {
			
			$.ajax({
				url: 'index.php?route=octemplates/module/oct_popup_cart/status_cart',
				type: 'get',
				dataType: 'json',
				cache: false,
				success: function(json) {
					masked('body', false);

					if(data){
					
						let cartIdsHolder = document.querySelector("[data-cart-ids]");

						if (json.oct_cart_ids && cartIdsHolder) {
							cartIdsHolder.dataset.cartIds = json.oct_cart_ids;
							setCartBtnAdded(updateOk = true);
						} else {
							if (cartIdsHolder) {
								cartIdsHolder.dataset.cartIds = '';
							}
							setCartBtnAdded(updateOk = true);
						}

						let parser = new DOMParser(),
							dataParsed = parser.parseFromString(data, 'text/html'),
							checkEmptyCart = dataParsed.querySelector('.empty-popup-cart'),
							modalCartBottom = document.querySelector('.modal-cart-bottom');

						const modalCartInner = document.getElementById('modalCartBody');
						const dataParsedCartInner = dataParsed.getElementById('modalCartBody').outerHTML;

						if (checkEmptyCart) {
							modalCartBottom.classList.add('d-none');
						}

						modalCartInner.innerHTML = dataParsedCartInner;

					}
					// Need to set timeout otherwise it wont update the total
					setTimeout(function () {
						$('#cart .header-buttons-cart-quantity').html(json['total_products']);
					}, 100);
				}
			});
		}
	});
}

// update quantity function
function update_manual(target, change, productID) {
	let input_val = $(target).val(),
	quantity  = parseInt(input_val),
	changeQuantity;

	// check quantity
	if (quantity <= 0) {
		quantity = $(target).val(1);
	} else if (change === 'minus') {
		changeQuantity = quantity-1;
	} else if (change === 'plus') {
		changeQuantity = quantity+1;
	} else {
		changeQuantity = quantity;
	}
	changeQuantity = (changeQuantity > 0) ? changeQuantity : 1;

	// show loading mask
	masked('body', true);

	// check minimum
	let minimum = '{{ product_minimum }}';
	if(changeQuantity < minimum) changeQuantity = minimum;

	// check stock order
	let productStock = $('#product_stock_' + productID).val();
	let productStockCheckout = '{{ product_stock_checkout }}';

	if (productStockCheckout == false) {
		if (changeQuantity > productStock) {
			scNotify('danger', '{{ error_stock }}');
			masked('body', false);
			if(productStock != 0) quantity = $(target).val(productStock);
			changeQuantity = productStock;
		}
	}

	$.ajax({
		url: 'index.php?route=octemplates/module/oct_popup_cart&isPopup=1&update=' + productID + '&quantity=' + changeQuantity,
		type: 'get',
		dataType: 'html',
		cache: false,
		success: function(data) {
		$.ajax({
			url: 'index.php?route=octemplates/module/oct_popup_cart/status_cart',
			type: 'get',
			dataType: 'json',
			cache: false,
			success: function(json) {
				if(data){
					let parser = new DOMParser(),
						dataParsed = parser.parseFromString(data, 'text/html');

					const modalCartInner = document.getElementById('modalCartBody');
					const dataParsedCartInner = dataParsed.getElementById('modalCartBody').outerHTML;

					modalCartInner.innerHTML = dataParsedCartInner;

				}
				// Need to set timeout otherwise it wont update the total
				setTimeout(function () {
					$('#cart .header-buttons-cart-quantity').html(json['total_products']);
					masked('body', false);
				}, 100);
			}
		});
		}
	});
}
</script>
</div>
{% endif %}
